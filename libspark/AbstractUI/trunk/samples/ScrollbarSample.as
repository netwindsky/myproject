package  {	import org.libspark.abstractUI.AbstractUI;	import org.libspark.abstractUI.events.ScrollbarEvent;	import org.libspark.abstractUI.scrollbar.IScrollbar;	import org.libspark.abstractUI.scrollbar.impl.SimpleScrollbar;		import flash.display.GradientType;	import flash.display.Sprite;	import flash.geom.Matrix;		/**	 * @author Mk-10:cellfusion	 */	public class ScrollbarSample extends Sprite 	{		public var scrollbar:Sprite;		private var _mask:Sprite;		private var _sp:Sprite;		private var _sb:IScrollbar;		public function ScrollbarSample()		{			AbstractUI.initialize(stage);						_sb = new SimpleScrollbar(scrollbar);						_mask = new Sprite();			_mask.graphics.beginFill(0x000000, 100);			_mask.graphics.drawRect(0, 0, 200, 200);			_mask.graphics.endFill();						addChild(_mask);						var mat:Matrix = new Matrix();			mat.createGradientBox(500, 200);			mat.rotate(Math.PI/2);						_sp = new Sprite();			_sp.graphics.beginGradientFill(GradientType.LINEAR, [0xFFFFFF, 0x000000], [1, 1], [0x00, 0xFF], mat);			_sp.graphics.drawRect(0, 0, 200, 500);			_sp.graphics.endFill();			_sp.mask = _mask;						addChild(_sp);						// マスクと表示オブジェクトの比率を渡す			_sb.pageSize = _mask.height / _sp.height;			_sb.addEventListener(ScrollbarEvent.SCROLL_CHANGED, scrollChangeHandler);		}				private function scrollChangeHandler(event:ScrollbarEvent):void		{			var p:Number = (_sb.scrollPos - _sb.minScrollPos) / (_sb.maxScrollPos - _sb.minScrollPos);			_sp.y = (_mask.height - _sp.height) * p;		}	}}