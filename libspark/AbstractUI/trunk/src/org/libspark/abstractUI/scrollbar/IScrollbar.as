/* * AbstractUI *  * Licensed under the MIT License *  * Copyright (c) 2008 cellfusion (www.cellfusion.jp), supported by Spark project (www.libspark.org). *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. *  */package org.libspark.abstractUI.scrollbar{	import flash.display.Sprite;	import flash.events.IEventDispatcher;								/**	 * スクロールバーのロジッククラス	 * 使い方はこんな風な感じ	 * 	 * var scrollbar:IScrollbar = new ScrollbarImpl(myScrollbarSprite);	 * 	 * @author Mk-10:cellfusion	 */	public interface IScrollbar extends IEventDispatcher 	{		/**		 * 現在のスクロール位置		 */		function get scrollPos():Number;		function set scrollPos(value:Number):void;				/**		 * 最大スクロール位置		 */		function get maxScrollPos():Number;		function set maxScrollPos(value:Number):void;				/**		 * 最小スクロール位置		 */		function get minScrollPos():Number;		function set minScrollPos(value:Number):void;				/**		 * スクロール量		 */		function get scrollSize():Number;		function set scrollSize(value:Number):void;				/**		 * ページ量		 */		function get pageSize():Number;		function set pageSize(value:Number):void;				/**		 * 上ボタン		 */		function get upButton():Sprite;		function set upButton(value:Sprite):void;				/**		 * 下ボタン		 */	    function get downButton():Sprite;	    function set downButton(value:Sprite):void;	    	    /**	     * ドラッグできるボタン（サム）	     */	    function get thumb():Sprite;	    function set thumb(value:Sprite):void;	    	    /**	     * 背景（track）	     */	     function get track():Sprite;	     function set track(value:Sprite):void;				/**		 * スクロールアルゴリズム		 */		function get scrollTween():IScrollTween;				/**		 * スクロールリピートアルゴリズム		 */		function get scrollRepeat():IScrollRepeat;				/**		 * 上方向のスクロール		 */		function scrollUp():void;				/**		 * 下方向のスクロール		 */		function scrollDown():void;				/**		 * 指定したところへスクロールする		 */		function scroll(num:Number):void;	}}