/* * AbstractUI *  * Licensed under the MIT License *  * Copyright (c) 2008 cellfusion (www.cellfusion.jp), supported by Spark project (www.libspark.org). *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. *  */package org.libspark.abstractUI.combobox{	import flash.events.IEventDispatcher;		import org.libspark.abstractUI.list.IList;		/**	 * @author Mk-10:cellfusion	 */	public interface ICombobox extends IEventDispatcher 	{		/**		 * ドロップダウンリストへの参照		 */		function get dropdown():IList;				/**		 * リスト内の項目の数を取得する		 */		function get length():uint;				/**		 * スクロールバーを持たないドロップダウンリストに表示できる最大の行数を取得または設定します		 */		function get rowCount():uint;		function set rowCount(value:uint):void;				/**		 * ドロップダウンリストで選択されているアイテムのインデックスを取得または設定する		 */		function get selectedIndex():int;		function set selectedIndex(value:int):void;				/**		 * ドロップダウンリストで選択されているアイテムの値を取得または設定する		 */		function get selectedItem():*;		function set selectedItem(value:*):void;				/**		 * アイテムのリストの末尾にアイテムを追加する		 */		function addItem(item:*):*;				/**		 * 指定されたインデックス位置のリストにアイテムを挿入します		 */		function addItemAt(item:*, index:uint):*;				/**		 * ドロップダウンリストを閉じます		 */		function close():void;				/**		 * 指定されたインデックス位置のアイテムを取得します		 */		function getItemAt(index:uint):*;				/**		 * ドロップダウンリストを開く		 */		function open():void;				/**		 * リストから全てのアイテムを削除します		 */		function removeAll():void;				/**		 * 指定されたアイテムをリストから削除します		 */		function removeItem(item:*):*;				/**		 * 指定されたインデックス位置のアイテムを削除します		 */		function removeItemAt(index:uint):*;				/**		 * 指定されたインデックス位置にあるアイテムを別のアイテムで置き換えます		 */		function replaceItemAt(item:*, index:uint):*;	}}